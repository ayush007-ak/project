{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nexport const Stores = (state = {\n  isLoading: true,\n  errMess: null,\n  stores: []\n}, action) => {\n  switch (action.type) {\n    case ActionTypes.ADD_STORES:\n      return { ...state,\n        isLoading: false,\n        errMess: null,\n        leaders: action.payload\n      };\n\n    case ActionTypes.STORES_LOADING:\n      return { ...state,\n        isLoading: true,\n        errMess: null,\n        stores: []\n      };\n\n    case ActionTypes.STORES_FAILED:\n      return { ...state,\n        isLoading: false,\n        errMess: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/React proj/react1/src/redux/stores.js"],"names":["ActionTypes","Stores","state","isLoading","errMess","stores","action","type","ADD_STORES","leaders","payload","STORES_LOADING","STORES_FAILED"],"mappings":"AACA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AAGA,OAAO,MAAMC,MAAM,GAAG,CAClBC,KAAK,GAAG;AACNC,EAAAA,SAAS,EAAE,IADL;AAENC,EAAAA,OAAO,EAAE,IAFH;AAGNC,EAAAA,MAAM,EAAE;AAHF,CADU,EAMlBC,MANkB,KAMP;AACX,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,WAAW,CAACQ,UAAjB;AACE,aAAO,EACL,GAAGN,KADE;AAELC,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,OAAO,EAAE,IAHJ;AAILK,QAAAA,OAAO,EAAEH,MAAM,CAACI;AAJX,OAAP;;AAOF,SAAKV,WAAW,CAACW,cAAjB;AACE,aAAO,EAAE,GAAGT,KAAL;AAAYC,QAAAA,SAAS,EAAE,IAAvB;AAA6BC,QAAAA,OAAO,EAAE,IAAtC;AAA4CC,QAAAA,MAAM,EAAE;AAApD,OAAP;;AAEF,SAAKL,WAAW,CAACY,aAAjB;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYC,QAAAA,SAAS,EAAE,KAAvB;AAA8BC,QAAAA,OAAO,EAAEE,MAAM,CAACI;AAA9C,OAAP;;AAEF;AACE,aAAOR,KAAP;AAhBJ;AAkBD,CAzBI","sourcesContent":["\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Stores = (\r\n    state = {\r\n      isLoading: true,\r\n      errMess: null,\r\n      stores: []\r\n    },\r\n    action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_STORES:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          errMess: null,\r\n          leaders: action.payload\r\n        };\r\n  \r\n      case ActionTypes.STORES_LOADING:\r\n        return { ...state, isLoading: true, errMess: null, stores: [] };\r\n  \r\n      case ActionTypes.STORES_FAILED:\r\n        return { ...state, isLoading: false, errMess: action.payload };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };"]},"metadata":{},"sourceType":"module"}